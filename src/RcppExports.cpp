// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// center_dep
NumericVector center_dep(NumericVector x, int n_region);
RcppExport SEXP _BJHCM_center_dep(SEXP xSEXP, SEXP n_regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n_region(n_regionSEXP);
    rcpp_result_gen = Rcpp::wrap(center_dep(x, n_region));
    return rcpp_result_gen;
END_RCPP
}
// LL_dep
double LL_dep(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double mu, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N);
RcppExport SEXP _BJHCM_LL_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_dep(b1, b2, b3, b4, b01, b02, phi, mu, theta, x1, x2, y1, y2, s1, s2, id, N));
    return rcpp_result_gen;
END_RCPP
}
// LL_id_dep
double LL_id_dep(double b1, double b2, double b3, double b4, double b01, double b02, double phi, double sigma, double mu, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N);
RcppExport SEXP _BJHCM_LL_id_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_id_dep(b1, b2, b3, b4, b01, b02, phi, sigma, mu, theta, x1, x2, y1, y2, s1, s2, N));
    return rcpp_result_gen;
END_RCPP
}
// target_phi_dep
double target_phi_dep(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double sigma, double mu, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_new, int k);
RcppExport SEXP _BJHCM_target_phi_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_newSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(target_phi_dep(b1, b2, b3, b4, b01, b02, phi, sigma, mu, theta, x1, x2, y1, y2, s1, s2, id, no_patient, N, x1_new, k));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma_dep
double target_sigma_dep(NumericVector phi, int no_patient);
RcppExport SEXP _BJHCM_target_sigma_dep(SEXP phiSEXP, SEXP no_patientSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma_dep(phi, no_patient));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma_epsilon_dep
double target_sigma_epsilon_dep(NumericVector theta, int N, IntegerVector ni, double rho);
RcppExport SEXP _BJHCM_target_sigma_epsilon_dep(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma_epsilon_dep(theta, N, ni, rho));
    return rcpp_result_gen;
END_RCPP
}
// theta_pow_sum_dep
double theta_pow_sum_dep(NumericVector theta, int N, IntegerVector ni);
RcppExport SEXP _BJHCM_theta_pow_sum_dep(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_pow_sum_dep(theta, N, ni));
    return rcpp_result_gen;
END_RCPP
}
// theta_lag_sum_dep
double theta_lag_sum_dep(NumericVector theta, int N, IntegerVector ni);
RcppExport SEXP _BJHCM_theta_lag_sum_dep(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_lag_sum_dep(theta, N, ni));
    return rcpp_result_gen;
END_RCPP
}
// rand_gen_dep
double rand_gen_dep();
RcppExport SEXP _BJHCM_rand_gen_dep() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rand_gen_dep());
    return rcpp_result_gen;
END_RCPP
}
// normalRandom_dep
double normalRandom_dep();
RcppExport SEXP _BJHCM_normalRandom_dep() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(normalRandom_dep());
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_dep
double metroplis_phi_dep(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi_curr, double sigma, double mu, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_prev, int j, double scale);
RcppExport SEXP _BJHCM_metroplis_phi_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phi_currSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi_curr(phi_currSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_dep(b1, b2, b3, b4, b01, b02, phi_curr, sigma, mu, theta, x1, x2, y1, y2, s1, s2, id, no_patient, N, x1_prev, j, scale));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_id_dep
double metroplis_phi_id_dep(double b1, double b2, double b3, double b4, double b01, double b02, double sigma, double mu, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, double x1_prev, double scale);
RcppExport SEXP _BJHCM_metroplis_phi_id_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_id_dep(b1, b2, b3, b4, b01, b02, sigma, mu, theta, x1, x2, y1, y2, s1, s2, N, x1_prev, scale));
    return rcpp_result_gen;
END_RCPP
}
// target_theta_dep
double target_theta_dep(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double mu, NumericVector theta, double rho, double sigma_epsilon, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, IntegerVector ni, double x1_new, int k, IntegerVector maxni);
RcppExport SEXP _BJHCM_target_theta_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP niSEXP, SEXP x1_newSEXP, SEXP kSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(target_theta_dep(b1, b2, b3, b4, b01, b02, phi, mu, theta, rho, sigma_epsilon, x1, x2, y1, y2, s1, s2, id, N, ni, x1_new, k, maxni));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_theta_dep
double metroplis_theta_dep(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double mu, NumericVector theta_curr, double rho, double sigma_epsilon, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, IntegerVector ni, double x1_prev, int j, double scale, IntegerVector maxni);
RcppExport SEXP _BJHCM_metroplis_theta_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP theta_currSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP niSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta_curr(theta_currSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_theta_dep(b1, b2, b3, b4, b01, b02, phi, mu, theta_curr, rho, sigma_epsilon, x1, x2, y1, y2, s1, s2, id, N, ni, x1_prev, j, scale, maxni));
    return rcpp_result_gen;
END_RCPP
}
// MH_dep
List MH_dep(NumericVector b1, NumericVector b2, NumericVector b3, NumericVector b4, NumericVector b01, NumericVector b02, NumericVector phi, NumericVector sigma, NumericVector mu, NumericVector theta, NumericVector rho, NumericVector sigma_epsilon, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_pat_p, int n_sample, int N_p, NumericVector scale, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_MH_dep(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_pat_pSEXP, SEXP n_sampleSEXP, SEXP N_pSEXP, SEXP scaleSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_pat_p(no_pat_pSEXP);
    Rcpp::traits::input_parameter< int >::type n_sample(n_sampleSEXP);
    Rcpp::traits::input_parameter< int >::type N_p(N_pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(MH_dep(b1, b2, b3, b4, b01, b02, phi, sigma, mu, theta, rho, sigma_epsilon, x1, x2, y1, y2, s1, s2, id, no_pat_p, n_sample, N_p, scale, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// center_dep_vec
NumericVector center_dep_vec(NumericVector x, int n_region);
RcppExport SEXP _BJHCM_center_dep_vec(SEXP xSEXP, SEXP n_regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n_region(n_regionSEXP);
    rcpp_result_gen = Rcpp::wrap(center_dep_vec(x, n_region));
    return rcpp_result_gen;
END_RCPP
}
// LL_dep_vec
double LL_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, int p, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_LL_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP pSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_dep_vec(b1, b2, b01, b02, phi, mu, theta, x, y1, y2, s1, s2, id, N, p, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// LLi_dep_vec
double LLi_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_LLi_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(LLi_dep_vec(b1, b2, b01, b02, phi, mu, theta, x, y1, y2, s1, s2, id, N, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// LL_id_dep_vec
double LL_id_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, double phi, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, int p);
RcppExport SEXP _BJHCM_LL_id_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_id_dep_vec(b1, b2, b01, b02, phi, mu, theta, x, y1, y2, s1, s2, N, p));
    return rcpp_result_gen;
END_RCPP
}
// target_phi_dep_vec
double target_phi_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double sigma, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_new, int k, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_target_phi_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_newSEXP, SEXP kSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(target_phi_dep_vec(b1, b2, b01, b02, phi, sigma, mu, theta, x, y1, y2, s1, s2, id, no_patient, N, x1_new, k, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma_dep_vec
double target_sigma_dep_vec(NumericVector phi, int no_patient);
RcppExport SEXP _BJHCM_target_sigma_dep_vec(SEXP phiSEXP, SEXP no_patientSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma_dep_vec(phi, no_patient));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma_epsilon_dep_vec
double target_sigma_epsilon_dep_vec(NumericVector theta, int N, IntegerVector ni, double rho);
RcppExport SEXP _BJHCM_target_sigma_epsilon_dep_vec(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma_epsilon_dep_vec(theta, N, ni, rho));
    return rcpp_result_gen;
END_RCPP
}
// theta_pow_sum_dep_vec
double theta_pow_sum_dep_vec(NumericVector theta, int N, IntegerVector ni);
RcppExport SEXP _BJHCM_theta_pow_sum_dep_vec(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_pow_sum_dep_vec(theta, N, ni));
    return rcpp_result_gen;
END_RCPP
}
// theta_lag_sum_dep_vec
double theta_lag_sum_dep_vec(NumericVector theta, int N, IntegerVector ni);
RcppExport SEXP _BJHCM_theta_lag_sum_dep_vec(SEXP thetaSEXP, SEXP NSEXP, SEXP niSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_lag_sum_dep_vec(theta, N, ni));
    return rcpp_result_gen;
END_RCPP
}
// rand_gen_vec
double rand_gen_vec();
RcppExport SEXP _BJHCM_rand_gen_vec() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rand_gen_vec());
    return rcpp_result_gen;
END_RCPP
}
// normalRandom_vec
double normalRandom_vec();
RcppExport SEXP _BJHCM_normalRandom_vec() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(normalRandom_vec());
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_dep_vec
double metroplis_phi_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi_curr, double sigma, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_prev, int j, double scale, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_metroplis_phi_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phi_currSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi_curr(phi_currSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_dep_vec(b1, b2, b01, b02, phi_curr, sigma, mu, theta, x, y1, y2, s1, s2, id, no_patient, N, x1_prev, j, scale, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_id_dep_vec
double metroplis_phi_id_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, double sigma, double mu, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, double x1_prev, double scale, int p);
RcppExport SEXP _BJHCM_metroplis_phi_id_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP scaleSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_id_dep_vec(b1, b2, b01, b02, sigma, mu, theta, x, y1, y2, s1, s2, N, x1_prev, scale, p));
    return rcpp_result_gen;
END_RCPP
}
// target_theta_dep_vec
double target_theta_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double mu, NumericVector theta, double rho, double sigma_epsilon, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, IntegerVector ni, double x1_new, int k, IntegerVector maxni, int p, IntegerVector j_start, IntegerVector j_end);
RcppExport SEXP _BJHCM_target_theta_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP niSEXP, SEXP x1_newSEXP, SEXP kSEXP, SEXP maxniSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    rcpp_result_gen = Rcpp::wrap(target_theta_dep_vec(b1, b2, b01, b02, phi, mu, theta, rho, sigma_epsilon, x, y1, y2, s1, s2, id, N, ni, x1_new, k, maxni, p, j_start, j_end));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_theta_dep_vec
double metroplis_theta_dep_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double mu, NumericVector theta_curr, double rho, double sigma_epsilon, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, IntegerVector ni, double x1_prev, int j, double scale, IntegerVector maxni, int p, IntegerVector j_start, IntegerVector j_end);
RcppExport SEXP _BJHCM_metroplis_theta_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP muSEXP, SEXP theta_currSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP niSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP, SEXP maxniSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta_curr(theta_currSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_theta_dep_vec(b1, b2, b01, b02, phi, mu, theta_curr, rho, sigma_epsilon, x, y1, y2, s1, s2, id, N, ni, x1_prev, j, scale, maxni, p, j_start, j_end));
    return rcpp_result_gen;
END_RCPP
}
// MH_dep_vec
List MH_dep_vec(NumericMatrix b1, NumericMatrix b2, NumericVector b01, NumericVector b02, NumericVector phi, NumericVector sigma, NumericVector mu, NumericVector theta, NumericVector rho, NumericVector sigma_epsilon, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_pat_p, int n_sample, int N_p, NumericVector scale, IntegerVector ni, IntegerVector maxni, int p, IntegerVector j_start, IntegerVector j_end);
RcppExport SEXP _BJHCM_MH_dep_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP rhoSEXP, SEXP sigma_epsilonSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_pat_pSEXP, SEXP n_sampleSEXP, SEXP N_pSEXP, SEXP scaleSEXP, SEXP niSEXP, SEXP maxniSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma_epsilon(sigma_epsilonSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_pat_p(no_pat_pSEXP);
    Rcpp::traits::input_parameter< int >::type n_sample(n_sampleSEXP);
    Rcpp::traits::input_parameter< int >::type N_p(N_pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    rcpp_result_gen = Rcpp::wrap(MH_dep_vec(b1, b2, b01, b02, phi, sigma, mu, theta, rho, sigma_epsilon, x, y1, y2, s1, s2, id, no_pat_p, n_sample, N_p, scale, ni, maxni, p, j_start, j_end));
    return rcpp_result_gen;
END_RCPP
}
// center
NumericVector center(NumericVector x, int n_region);
RcppExport SEXP _BJHCM_center(SEXP xSEXP, SEXP n_regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n_region(n_regionSEXP);
    rcpp_result_gen = Rcpp::wrap(center(x, n_region));
    return rcpp_result_gen;
END_RCPP
}
// LL
double LL(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N);
RcppExport SEXP _BJHCM_LL(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(LL(b1, b2, b3, b4, b01, b02, phi, theta, x1, x2, y1, y2, s1, s2, id, N));
    return rcpp_result_gen;
END_RCPP
}
// LL_id
double LL_id(double b1, double b2, double b3, double b4, double b01, double b02, double phi, double theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N);
RcppExport SEXP _BJHCM_LL_id(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_id(b1, b2, b3, b4, b01, b02, phi, theta, x1, x2, y1, y2, s1, s2, N));
    return rcpp_result_gen;
END_RCPP
}
// target_phi
double target_phi(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi, double sigma, double theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_new, int k);
RcppExport SEXP _BJHCM_target_phi(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_newSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(target_phi(b1, b2, b3, b4, b01, b02, phi, sigma, theta, x1, x2, y1, y2, s1, s2, id, no_patient, N, x1_new, k));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma
double target_sigma(NumericVector phi, int no_patient);
RcppExport SEXP _BJHCM_target_sigma(SEXP phiSEXP, SEXP no_patientSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma(phi, no_patient));
    return rcpp_result_gen;
END_RCPP
}
// rand_gen
double rand_gen();
RcppExport SEXP _BJHCM_rand_gen() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rand_gen());
    return rcpp_result_gen;
END_RCPP
}
// normalRandom
double normalRandom();
RcppExport SEXP _BJHCM_normalRandom() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(normalRandom());
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi
double metroplis_phi(double b1, double b2, double b3, double b4, double b01, double b02, NumericVector phi_curr, double sigma, double theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_prev, int j, double scale);
RcppExport SEXP _BJHCM_metroplis_phi(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phi_currSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi_curr(phi_currSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi(b1, b2, b3, b4, b01, b02, phi_curr, sigma, theta, x1, x2, y1, y2, s1, s2, id, no_patient, N, x1_prev, j, scale));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_id
double metroplis_phi_id(double b1, double b2, double b3, double b4, double b01, double b02, double theta, double sigma, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, double x1_prev, double scale);
RcppExport SEXP _BJHCM_metroplis_phi_id(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP thetaSEXP, SEXP sigmaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< double >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_id(b1, b2, b3, b4, b01, b02, theta, sigma, x1, x2, y1, y2, s1, s2, N, x1_prev, scale));
    return rcpp_result_gen;
END_RCPP
}
// MH_joint_model
List MH_joint_model(NumericVector b1, NumericVector b2, NumericVector b3, NumericVector b4, NumericVector b01, NumericVector b02, NumericVector phi, NumericVector sigma, NumericVector theta, NumericVector x1, NumericVector x2, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_pat_p, int n_sample, int N_p, NumericVector scale);
RcppExport SEXP _BJHCM_MH_joint_model(SEXP b1SEXP, SEXP b2SEXP, SEXP b3SEXP, SEXP b4SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP x1SEXP, SEXP x2SEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_pat_pSEXP, SEXP n_sampleSEXP, SEXP N_pSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b3(b3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b4(b4SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_pat_p(no_pat_pSEXP);
    Rcpp::traits::input_parameter< int >::type n_sample(n_sampleSEXP);
    Rcpp::traits::input_parameter< int >::type N_p(N_pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(MH_joint_model(b1, b2, b3, b4, b01, b02, phi, sigma, theta, x1, x2, y1, y2, s1, s2, id, no_pat_p, n_sample, N_p, scale));
    return rcpp_result_gen;
END_RCPP
}
// center_vec
NumericVector center_vec(NumericVector x, int n_region);
RcppExport SEXP _BJHCM_center_vec(SEXP xSEXP, SEXP n_regionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n_region(n_regionSEXP);
    rcpp_result_gen = Rcpp::wrap(center_vec(x, n_region));
    return rcpp_result_gen;
END_RCPP
}
// LL_vec
double LL_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, int p, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_LL_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP pSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_vec(b1, b2, b01, b02, phi, theta, x, y1, y2, s1, s2, id, N, p, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// LLi_vec
double LLi_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int N, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_LLi_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP NSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(LLi_vec(b1, b2, b01, b02, phi, theta, x, y1, y2, s1, s2, id, N, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// LL_id_vec
double LL_id_vec(NumericVector b1, NumericVector b2, double b01, double b02, double phi, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, int p);
RcppExport SEXP _BJHCM_LL_id_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_id_vec(b1, b2, b01, b02, phi, theta, x, y1, y2, s1, s2, N, p));
    return rcpp_result_gen;
END_RCPP
}
// target_phi_vec
double target_phi_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi, double sigma, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_new, int k, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_target_phi_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_newSEXP, SEXP kSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_new(x1_newSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(target_phi_vec(b1, b2, b01, b02, phi, sigma, theta, x, y1, y2, s1, s2, id, no_patient, N, x1_new, k, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// target_sigma_vec
double target_sigma_vec(NumericVector phi, int no_patient);
RcppExport SEXP _BJHCM_target_sigma_vec(SEXP phiSEXP, SEXP no_patientSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    rcpp_result_gen = Rcpp::wrap(target_sigma_vec(phi, no_patient));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_vec
double metroplis_phi_vec(NumericVector b1, NumericVector b2, double b01, double b02, NumericVector phi_curr, double sigma, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_patient, int N, double x1_prev, int j, double scale, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_metroplis_phi_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phi_currSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_patientSEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP jSEXP, SEXP scaleSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi_curr(phi_currSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_patient(no_patientSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_vec(b1, b2, b01, b02, phi_curr, sigma, theta, x, y1, y2, s1, s2, id, no_patient, N, x1_prev, j, scale, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}
// metroplis_phi_id_vec
double metroplis_phi_id_vec(NumericVector b1, NumericVector b2, double b01, double b02, double sigma, double theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, int N, double x1_prev, double scale, int p);
RcppExport SEXP _BJHCM_metroplis_phi_id_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP NSEXP, SEXP x1_prevSEXP, SEXP scaleSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< double >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type x1_prev(x1_prevSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(metroplis_phi_id_vec(b1, b2, b01, b02, sigma, theta, x, y1, y2, s1, s2, N, x1_prev, scale, p));
    return rcpp_result_gen;
END_RCPP
}
// MH_joint_model_vec
List MH_joint_model_vec(NumericMatrix b1, NumericMatrix b2, NumericVector b01, NumericVector b02, NumericVector phi, NumericVector sigma, NumericVector theta, NumericMatrix x, NumericVector y1, NumericVector y2, IntegerVector s1, IntegerVector s2, IntegerVector id, int no_pat_p, int n_sample, int N_p, NumericVector scale, int p, IntegerVector j_start, IntegerVector j_end, IntegerVector ni, IntegerVector maxni);
RcppExport SEXP _BJHCM_MH_joint_model_vec(SEXP b1SEXP, SEXP b2SEXP, SEXP b01SEXP, SEXP b02SEXP, SEXP phiSEXP, SEXP sigmaSEXP, SEXP thetaSEXP, SEXP xSEXP, SEXP y1SEXP, SEXP y2SEXP, SEXP s1SEXP, SEXP s2SEXP, SEXP idSEXP, SEXP no_pat_pSEXP, SEXP n_sampleSEXP, SEXP N_pSEXP, SEXP scaleSEXP, SEXP pSEXP, SEXP j_startSEXP, SEXP j_endSEXP, SEXP niSEXP, SEXP maxniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b01(b01SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b02(b02SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y2(y2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< int >::type no_pat_p(no_pat_pSEXP);
    Rcpp::traits::input_parameter< int >::type n_sample(n_sampleSEXP);
    Rcpp::traits::input_parameter< int >::type N_p(N_pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_start(j_startSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type j_end(j_endSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ni(niSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type maxni(maxniSEXP);
    rcpp_result_gen = Rcpp::wrap(MH_joint_model_vec(b1, b2, b01, b02, phi, sigma, theta, x, y1, y2, s1, s2, id, no_pat_p, n_sample, N_p, scale, p, j_start, j_end, ni, maxni));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BJHCM_center_dep", (DL_FUNC) &_BJHCM_center_dep, 2},
    {"_BJHCM_LL_dep", (DL_FUNC) &_BJHCM_LL_dep, 17},
    {"_BJHCM_LL_id_dep", (DL_FUNC) &_BJHCM_LL_id_dep, 17},
    {"_BJHCM_target_phi_dep", (DL_FUNC) &_BJHCM_target_phi_dep, 21},
    {"_BJHCM_target_sigma_dep", (DL_FUNC) &_BJHCM_target_sigma_dep, 2},
    {"_BJHCM_target_sigma_epsilon_dep", (DL_FUNC) &_BJHCM_target_sigma_epsilon_dep, 4},
    {"_BJHCM_theta_pow_sum_dep", (DL_FUNC) &_BJHCM_theta_pow_sum_dep, 3},
    {"_BJHCM_theta_lag_sum_dep", (DL_FUNC) &_BJHCM_theta_lag_sum_dep, 3},
    {"_BJHCM_rand_gen_dep", (DL_FUNC) &_BJHCM_rand_gen_dep, 0},
    {"_BJHCM_normalRandom_dep", (DL_FUNC) &_BJHCM_normalRandom_dep, 0},
    {"_BJHCM_metroplis_phi_dep", (DL_FUNC) &_BJHCM_metroplis_phi_dep, 22},
    {"_BJHCM_metroplis_phi_id_dep", (DL_FUNC) &_BJHCM_metroplis_phi_id_dep, 18},
    {"_BJHCM_target_theta_dep", (DL_FUNC) &_BJHCM_target_theta_dep, 23},
    {"_BJHCM_metroplis_theta_dep", (DL_FUNC) &_BJHCM_metroplis_theta_dep, 24},
    {"_BJHCM_MH_dep", (DL_FUNC) &_BJHCM_MH_dep, 25},
    {"_BJHCM_center_dep_vec", (DL_FUNC) &_BJHCM_center_dep_vec, 2},
    {"_BJHCM_LL_dep_vec", (DL_FUNC) &_BJHCM_LL_dep_vec, 17},
    {"_BJHCM_LLi_dep_vec", (DL_FUNC) &_BJHCM_LLi_dep_vec, 19},
    {"_BJHCM_LL_id_dep_vec", (DL_FUNC) &_BJHCM_LL_id_dep_vec, 14},
    {"_BJHCM_target_phi_dep_vec", (DL_FUNC) &_BJHCM_target_phi_dep_vec, 23},
    {"_BJHCM_target_sigma_dep_vec", (DL_FUNC) &_BJHCM_target_sigma_dep_vec, 2},
    {"_BJHCM_target_sigma_epsilon_dep_vec", (DL_FUNC) &_BJHCM_target_sigma_epsilon_dep_vec, 4},
    {"_BJHCM_theta_pow_sum_dep_vec", (DL_FUNC) &_BJHCM_theta_pow_sum_dep_vec, 3},
    {"_BJHCM_theta_lag_sum_dep_vec", (DL_FUNC) &_BJHCM_theta_lag_sum_dep_vec, 3},
    {"_BJHCM_rand_gen_vec", (DL_FUNC) &_BJHCM_rand_gen_vec, 0},
    {"_BJHCM_normalRandom_vec", (DL_FUNC) &_BJHCM_normalRandom_vec, 0},
    {"_BJHCM_metroplis_phi_dep_vec", (DL_FUNC) &_BJHCM_metroplis_phi_dep_vec, 24},
    {"_BJHCM_metroplis_phi_id_dep_vec", (DL_FUNC) &_BJHCM_metroplis_phi_id_dep_vec, 16},
    {"_BJHCM_target_theta_dep_vec", (DL_FUNC) &_BJHCM_target_theta_dep_vec, 23},
    {"_BJHCM_metroplis_theta_dep_vec", (DL_FUNC) &_BJHCM_metroplis_theta_dep_vec, 24},
    {"_BJHCM_MH_dep_vec", (DL_FUNC) &_BJHCM_MH_dep_vec, 25},
    {"_BJHCM_center", (DL_FUNC) &_BJHCM_center, 2},
    {"_BJHCM_LL", (DL_FUNC) &_BJHCM_LL, 16},
    {"_BJHCM_LL_id", (DL_FUNC) &_BJHCM_LL_id, 15},
    {"_BJHCM_target_phi", (DL_FUNC) &_BJHCM_target_phi, 20},
    {"_BJHCM_target_sigma", (DL_FUNC) &_BJHCM_target_sigma, 2},
    {"_BJHCM_rand_gen", (DL_FUNC) &_BJHCM_rand_gen, 0},
    {"_BJHCM_normalRandom", (DL_FUNC) &_BJHCM_normalRandom, 0},
    {"_BJHCM_metroplis_phi", (DL_FUNC) &_BJHCM_metroplis_phi, 21},
    {"_BJHCM_metroplis_phi_id", (DL_FUNC) &_BJHCM_metroplis_phi_id, 17},
    {"_BJHCM_MH_joint_model", (DL_FUNC) &_BJHCM_MH_joint_model, 20},
    {"_BJHCM_center_vec", (DL_FUNC) &_BJHCM_center_vec, 2},
    {"_BJHCM_LL_vec", (DL_FUNC) &_BJHCM_LL_vec, 16},
    {"_BJHCM_LLi_vec", (DL_FUNC) &_BJHCM_LLi_vec, 18},
    {"_BJHCM_LL_id_vec", (DL_FUNC) &_BJHCM_LL_id_vec, 13},
    {"_BJHCM_target_phi_vec", (DL_FUNC) &_BJHCM_target_phi_vec, 22},
    {"_BJHCM_target_sigma_vec", (DL_FUNC) &_BJHCM_target_sigma_vec, 2},
    {"_BJHCM_metroplis_phi_vec", (DL_FUNC) &_BJHCM_metroplis_phi_vec, 23},
    {"_BJHCM_metroplis_phi_id_vec", (DL_FUNC) &_BJHCM_metroplis_phi_id_vec, 15},
    {"_BJHCM_MH_joint_model_vec", (DL_FUNC) &_BJHCM_MH_joint_model_vec, 22},
    {NULL, NULL, 0}
};

RcppExport void R_init_BJHCM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
